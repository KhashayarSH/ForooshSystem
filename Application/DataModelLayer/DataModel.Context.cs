//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataModelLayer
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class forooshEntities : DbContext
    {
        public forooshEntities()
            : base("name=forooshEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<User> Users { get; set; }
        public virtual DbSet<Vw_Users> Vw_Users { get; set; }
        public virtual DbSet<Customer> Customers { get; set; }
        public virtual DbSet<Vw_Customer> Vw_Customer { get; set; }
        public virtual DbSet<ProductPrice> ProductPrices { get; set; }
        public virtual DbSet<Vw_ProductPrice> Vw_ProductPrice { get; set; }
        public virtual DbSet<Inventory> Inventories { get; set; }
        public virtual DbSet<vw_Inventory> vw_Inventory { get; set; }
        public virtual DbSet<Product> Products { get; set; }
        public virtual DbSet<Userlog> Userlogs { get; set; }
        public virtual DbSet<vw_userlog> vw_userlog { get; set; }
        public virtual DbSet<Vw_product> Vw_product { get; set; }
        public virtual DbSet<DataHistory> DataHistories { get; set; }
        public virtual DbSet<Invoice> Invoices { get; set; }
        public virtual DbSet<InvoiceItem> InvoiceItems { get; set; }
        public virtual DbSet<Vw_InvoiceItem> Vw_InvoiceItem { get; set; }
        public virtual DbSet<vw_invoice> vw_invoice { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
    
        public virtual int Sp_ins_product(string productName, string productDesc, byte[] productImage, string productStartDate, Nullable<int> userId)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productDescParameter = productDesc != null ?
                new ObjectParameter("ProductDesc", productDesc) :
                new ObjectParameter("ProductDesc", typeof(string));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(byte[]));
    
            var productStartDateParameter = productStartDate != null ?
                new ObjectParameter("ProductStartDate", productStartDate) :
                new ObjectParameter("ProductStartDate", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ins_product", productNameParameter, productDescParameter, productImageParameter, productStartDateParameter, userIdParameter);
        }
    
        public virtual int Sp_int_product(Nullable<int> productId, string productName, string prouctDesc, byte[] productImage, string productStartDate, Nullable<int> userID)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var prouctDescParameter = prouctDesc != null ?
                new ObjectParameter("ProuctDesc", prouctDesc) :
                new ObjectParameter("ProuctDesc", typeof(string));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(byte[]));
    
            var productStartDateParameter = productStartDate != null ?
                new ObjectParameter("ProductStartDate", productStartDate) :
                new ObjectParameter("ProductStartDate", typeof(string));
    
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_int_product", productIdParameter, productNameParameter, prouctDescParameter, productImageParameter, productStartDateParameter, userIDParameter);
        }
    
        public virtual int Sp_ins_product1(string productName, string productDesc, byte[] productImage, string productStartDate, Nullable<int> userId)
        {
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productDescParameter = productDesc != null ?
                new ObjectParameter("ProductDesc", productDesc) :
                new ObjectParameter("ProductDesc", typeof(string));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(byte[]));
    
            var productStartDateParameter = productStartDate != null ?
                new ObjectParameter("ProductStartDate", productStartDate) :
                new ObjectParameter("ProductStartDate", typeof(string));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_ins_product1", productNameParameter, productDescParameter, productImageParameter, productStartDateParameter, userIdParameter);
        }
    
        public virtual int Sp_UpdateFee_Product(Nullable<int> productId, Nullable<long> productLastFee, Nullable<long> productLastPurchFee)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productLastFeeParameter = productLastFee.HasValue ?
                new ObjectParameter("ProductLastFee", productLastFee) :
                new ObjectParameter("ProductLastFee", typeof(long));
    
            var productLastPurchFeeParameter = productLastPurchFee.HasValue ?
                new ObjectParameter("ProductLastPurchFee", productLastPurchFee) :
                new ObjectParameter("ProductLastPurchFee", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_UpdateFee_Product", productIdParameter, productLastFeeParameter, productLastPurchFeeParameter);
        }
    
        public virtual int Sp_Update_ProductLastStock(Nullable<int> inventoryCount, Nullable<int> productId)
        {
            var inventoryCountParameter = inventoryCount.HasValue ?
                new ObjectParameter("InventoryCount", inventoryCount) :
                new ObjectParameter("InventoryCount", typeof(int));
    
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("productId", productId) :
                new ObjectParameter("productId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ProductLastStock", inventoryCountParameter, productIdParameter);
        }
    
        public virtual int Sp_Update_ExitDate(Nullable<int> userId, string exitDate)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(int));
    
            var exitDateParameter = exitDate != null ?
                new ObjectParameter("ExitDate", exitDate) :
                new ObjectParameter("ExitDate", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_ExitDate", userIdParameter, exitDateParameter);
        }
    
        public virtual int Sp_Update_product(Nullable<int> productId, string productName, string productDesc, byte[] productImage)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productDescParameter = productDesc != null ?
                new ObjectParameter("ProductDesc", productDesc) :
                new ObjectParameter("ProductDesc", typeof(string));
    
            var productImageParameter = productImage != null ?
                new ObjectParameter("ProductImage", productImage) :
                new ObjectParameter("ProductImage", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_product", productIdParameter, productNameParameter, productDescParameter, productImageParameter);
        }
    
        public virtual int Sp_Update_product2(Nullable<int> productId, string productName, string productDesc)
        {
            var productIdParameter = productId.HasValue ?
                new ObjectParameter("ProductId", productId) :
                new ObjectParameter("ProductId", typeof(int));
    
            var productNameParameter = productName != null ?
                new ObjectParameter("ProductName", productName) :
                new ObjectParameter("ProductName", typeof(string));
    
            var productDescParameter = productDesc != null ?
                new ObjectParameter("ProductDesc", productDesc) :
                new ObjectParameter("ProductDesc", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Sp_Update_product2", productIdParameter, productNameParameter, productDescParameter);
        }
    
        public virtual ObjectResult<Sp_Foroosh_Chart_Result> Sp_Foroosh_Chart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Foroosh_Chart_Result>("Sp_Foroosh_Chart");
        }
    
        public virtual ObjectResult<Sp_CustomerForooshChart_Result> Sp_CustomerForooshChart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_CustomerForooshChart_Result>("Sp_CustomerForooshChart");
        }
    
        public virtual ObjectResult<Sp_Productforooshchart_Result> Sp_Productforooshchart()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Sp_Productforooshchart_Result>("Sp_Productforooshchart");
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
